# https://github.com/johannyren/PowerDisplayESPHome/blob/main/power-display-esphome.yaml
substitutions:
  device_name:  "esphome-wemos-energy-matrix"
  # Configuration
  sub_timezone: "Europe/Amsterdam" # Set your time zone
  sub_update_interval: 60s
  sub_rotation: 0Â° # Display rotation
esphome:
  name: ${device_name}
  includes:
    - energy-matrix.h  

esp8266:
  board: d1_mini

# Enable logging
logger:
  logs:
    component: ERROR

# Enable Home Assistant API
api:

ota:
  - platform: esphome

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: !secret wifi_ssid_zeist
    password: !secret wifi_password_zeist
  reboot_timeout: 60s

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Energy Matrix Fallback"

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: ${sub_timezone}

# Define sensors in HomeAssistant that we use for data
sensor:
  # # Current import (unit is W - if you meter is using kW then it needs conversion)
  # - platform: homeassistant
  #   id: import_el
  #   entity_id: sensor.momentary_active_import

  # Current export (if having solar production or similar, otherwise comment this out)  
  - platform: homeassistant
    id: dsmr_power_produced  
    entity_id: sensor.power_produced

  # Electricity prices from ENTSO-E. Expecting Home Assistant ENTSO-E Integration. https://github.com/JaccoR/hass-entso-e
  - platform: homeassistant
    id: entso_min
    entity_id: sensor.elektriciteit_laagste_prijs_vandaag

  - platform: homeassistant
    id: entso_max  
    entity_id: sensor.elektriciteit_hoogste_prijs_vandaag

  # From NordPool, but you can also use Tibber etc.
  - platform: homeassistant
    id: price_now
    entity_id: sensor.elektriciteit_huidige_markt_prijs

text_sensor:
  - platform: homeassistant # Entso-E
    id: entso_today
    entity_id: sensor.elektriciteit_gemiddelde_prijs_vandaag
    attribute: prices_today
  - platform: homeassistant # Entso-E
    id: entso_tomorrow
    entity_id: sensor.elektriciteit_gemiddelde_prijs_vandaag
    attribute: prices_tomorrow

#--------- LED matrix ----------------
light:
  - platform: neopixelbus
    id: led_matrix_light
    name: "Led matrix"
    internal: True
    pin: GPIO13
    num_leds: 64
    variant: WS2812
    type: GRB

# 8x8 WS2812B Addressable Light Display
display:
  - platform: addressable_light
    id: led_matrix_display
    addressable_light_id: led_matrix_light
    width: 8
    height: 8
    rotation: ${sub_rotation}
    update_interval: ${sub_update_interval}
    pixel_mapper: |-
      // Remap pixels for LR chronological order price bars on the CJMCU-64
      return (7 - x) + (y * 8);
    lambda: |-
          static EnergyMatrix energyMatrix;  
          energyMatrix.SetCurrentPrice(id(price_now).state);
          energyMatrix.SetMinPrice(id(entso_min).state);
          energyMatrix.SetMaxPrice(id(entso_max).state);
          energyMatrix.SetTodaysPrices(id(entso_today).state.c_str());
          energyMatrix.SetTomorrowsPrices(id(entso_tomorrow).state.c_str());

          energyMatrix.SetPrices("today");
          energyMatrix.SetPrices("tomorrow");
      
          // Clear screen
          it.fill(COLOR_OFF); 
          
          // Draw price matrix
          energyMatrix.drawPriceMatrix(&it);
    
captive_portal:
    